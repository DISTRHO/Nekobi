name: build

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
env:
  DEBIAN_FRONTEND: noninteractive

jobs:
  linux-arm64:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up dependencies
      run: |
        sudo dpkg --add-architecture arm64 && \
        sudo apt-get update -qq && \
        sudo apt-get install -yq libasound2-dev:arm64 libgl1-mesa-dev:arm64 liblo-dev:arm64 libpulse-dev:arm64
    - name: Build linux arm64 cross-compiled
      env:
        CC: aarch64-linux-gnu-gcc
        CXX: aarch64-linux-gnu-g++
        LDFLAGS: -static-libgcc -static-libstdc++
      run: |
        make
    - uses: actions/upload-artifact@v2
      with:
        name: linux arm64
        path: |
          bin/*

  linux-x64:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up dependencies
      run: |
        sudo apt-get install -yq libasound2-dev libgl1-mesa-dev liblo-dev libpulse-dev
    - name: Build linux x64
      env:
        LDFLAGS: -static-libgcc -static-libstdc++
      run: |
        make
    - uses: actions/upload-artifact@v2
      with:
        name: linux x64
        path: |
          bin/*

  macos-universal:
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Fix up Xcode
      run: |
        sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*
        sudo xcode-select -s "/Applications/Xcode_12.3.app"
    - name: Build macOS universal
      env:
        CFLAGS: -mtune=generic -msse -msse2 -DMAC_OS_X_VERSION_MAX_ALLOWED=MAC_OS_X_VERSION_10_12 -mmacosx-version-min=10.12 -arch x86_64 -arch arm64
        CXXFLAGS: -mtune=generic -msse -msse2 -DMAC_OS_X_VERSION_MAX_ALLOWED=MAC_OS_X_VERSION_10_12 -mmacosx-version-min=10.12 -arch x86_64 -arch arm64
        LDFLAGS: -mmacosx-version-min=10.12 -arch x86_64 -arch arm64
      run: |
        make NOOPT=true
    - uses: actions/upload-artifact@v2
      with:
        name: macOS universal
        path: |
          bin/*
          !bin/*-ladspa.dylib
          !bin/*-dssi.dylib

  win32:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up dependencies
      run: |
        sudo dpkg --add-architecture i386 && \
        sudo apt-get update -qq && \
        sudo apt-get install -yq binutils-mingw-w64-i686 g++-mingw-w64-i686 mingw-w64 wine-stable:i386
    - name: Build win32 cross-compiled
      env:
        CC: i686-w64-mingw32-gcc
        CXX: i686-w64-mingw32-g++
        EXE_WRAPPER: wine
        PKG_CONFIG: "false"
        WINEDEBUG: "-all"
      run: |
        make
    - uses: actions/upload-artifact@v2
      with:
        name: win32
        path: |
          bin/*
          !bin/*-ladspa.dll
          !bin/*-dssi.dll

  win64:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up dependencies
      run: |
        sudo apt-get install -yq binutils-mingw-w64-x86-64 g++-mingw-w64-x86-64 mingw-w64 wine-stable
    - name: Build win64 cross-compiled
      env:
        CC: x86_64-w64-mingw32-gcc
        CXX: x86_64-w64-mingw32-g++
        EXE_WRAPPER: wine
        PKG_CONFIG: "false"
        WINEDEBUG: "-all"
      run: |
        make
    - uses: actions/upload-artifact@v2
      with:
        name: win64
        path: |
          bin/*
          !bin/*-ladspa.dll
          !bin/*-dssi.dll
